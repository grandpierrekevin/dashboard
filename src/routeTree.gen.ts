/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SonarqubeRouteImport } from './routes/sonarqube'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as JiraRouteImport } from './routes/jira'
import { Route as JenkinsRouteImport } from './routes/jenkins'
import { Route as GitlabRouteImport } from './routes/gitlab'
import { Route as GithubRouteImport } from './routes/github'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AboutRouteImport } from './routes/about'
import { Route as R404RouteImport } from './routes/404'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIntegrationsRouteImport } from './routes/admin/integrations'
import { Route as AdminCorrelationRouteImport } from './routes/admin/correlation'

const SonarqubeRoute = SonarqubeRouteImport.update({
  id: '/sonarqube',
  path: '/sonarqube',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const JiraRoute = JiraRouteImport.update({
  id: '/jira',
  path: '/jira',
  getParentRoute: () => rootRouteImport,
} as any)
const JenkinsRoute = JenkinsRouteImport.update({
  id: '/jenkins',
  path: '/jenkins',
  getParentRoute: () => rootRouteImport,
} as any)
const GitlabRoute = GitlabRouteImport.update({
  id: '/gitlab',
  path: '/gitlab',
  getParentRoute: () => rootRouteImport,
} as any)
const GithubRoute = GithubRouteImport.update({
  id: '/github',
  path: '/github',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIntegrationsRoute = AdminIntegrationsRouteImport.update({
  id: '/admin/integrations',
  path: '/admin/integrations',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCorrelationRoute = AdminCorrelationRouteImport.update({
  id: '/admin/correlation',
  path: '/admin/correlation',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardRoute
  '/github': typeof GithubRoute
  '/gitlab': typeof GitlabRoute
  '/jenkins': typeof JenkinsRoute
  '/jira': typeof JiraRoute
  '/profile': typeof ProfileRoute
  '/sonarqube': typeof SonarqubeRoute
  '/admin/correlation': typeof AdminCorrelationRoute
  '/admin/integrations': typeof AdminIntegrationsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardRoute
  '/github': typeof GithubRoute
  '/gitlab': typeof GitlabRoute
  '/jenkins': typeof JenkinsRoute
  '/jira': typeof JiraRoute
  '/profile': typeof ProfileRoute
  '/sonarqube': typeof SonarqubeRoute
  '/admin/correlation': typeof AdminCorrelationRoute
  '/admin/integrations': typeof AdminIntegrationsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/about': typeof AboutRoute
  '/dashboard': typeof DashboardRoute
  '/github': typeof GithubRoute
  '/gitlab': typeof GitlabRoute
  '/jenkins': typeof JenkinsRoute
  '/jira': typeof JiraRoute
  '/profile': typeof ProfileRoute
  '/sonarqube': typeof SonarqubeRoute
  '/admin/correlation': typeof AdminCorrelationRoute
  '/admin/integrations': typeof AdminIntegrationsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/404'
    | '/about'
    | '/dashboard'
    | '/github'
    | '/gitlab'
    | '/jenkins'
    | '/jira'
    | '/profile'
    | '/sonarqube'
    | '/admin/correlation'
    | '/admin/integrations'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/404'
    | '/about'
    | '/dashboard'
    | '/github'
    | '/gitlab'
    | '/jenkins'
    | '/jira'
    | '/profile'
    | '/sonarqube'
    | '/admin/correlation'
    | '/admin/integrations'
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/about'
    | '/dashboard'
    | '/github'
    | '/gitlab'
    | '/jenkins'
    | '/jira'
    | '/profile'
    | '/sonarqube'
    | '/admin/correlation'
    | '/admin/integrations'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  AboutRoute: typeof AboutRoute
  DashboardRoute: typeof DashboardRoute
  GithubRoute: typeof GithubRoute
  GitlabRoute: typeof GitlabRoute
  JenkinsRoute: typeof JenkinsRoute
  JiraRoute: typeof JiraRoute
  ProfileRoute: typeof ProfileRoute
  SonarqubeRoute: typeof SonarqubeRoute
  AdminCorrelationRoute: typeof AdminCorrelationRoute
  AdminIntegrationsRoute: typeof AdminIntegrationsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sonarqube': {
      id: '/sonarqube'
      path: '/sonarqube'
      fullPath: '/sonarqube'
      preLoaderRoute: typeof SonarqubeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/jira': {
      id: '/jira'
      path: '/jira'
      fullPath: '/jira'
      preLoaderRoute: typeof JiraRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/jenkins': {
      id: '/jenkins'
      path: '/jenkins'
      fullPath: '/jenkins'
      preLoaderRoute: typeof JenkinsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gitlab': {
      id: '/gitlab'
      path: '/gitlab'
      fullPath: '/gitlab'
      preLoaderRoute: typeof GitlabRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/github': {
      id: '/github'
      path: '/github'
      fullPath: '/github'
      preLoaderRoute: typeof GithubRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/integrations': {
      id: '/admin/integrations'
      path: '/admin/integrations'
      fullPath: '/admin/integrations'
      preLoaderRoute: typeof AdminIntegrationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/correlation': {
      id: '/admin/correlation'
      path: '/admin/correlation'
      fullPath: '/admin/correlation'
      preLoaderRoute: typeof AdminCorrelationRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  AboutRoute: AboutRoute,
  DashboardRoute: DashboardRoute,
  GithubRoute: GithubRoute,
  GitlabRoute: GitlabRoute,
  JenkinsRoute: JenkinsRoute,
  JiraRoute: JiraRoute,
  ProfileRoute: ProfileRoute,
  SonarqubeRoute: SonarqubeRoute,
  AdminCorrelationRoute: AdminCorrelationRoute,
  AdminIntegrationsRoute: AdminIntegrationsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
